{"version":3,"sources":["components/loading/loading.tsx","components/loading/loading.styles.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Loading","withStyles","theme","createStyles","loading_main","width","maxWidth","padding","margin","breakpoints","down","title","fontFamily","fontSize","up","loadingCircle","height","borderRadius","color","base_circle","position","percent_textContainer","display","justifyContent","alignItems","loaderContainer","startButton","transform","boxShadow","backgroundImage","pauseButton","resetButton","backgroundColor","percent_text","footer","props","classes","onClick","useState","percentValue","setPercentValue","isPaused","setIsPaused","useEffect","newPercentValue","setTimeout","setPercentValueFunc","Grid","container","spacing","className","item","xs","Box","CircularProgress","variant","value","Button","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39b26eda.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { withStyles, WithStyles, Grid, Button, Box, CircularProgress } from '@material-ui/core'\nimport { componentStyles } from './loading.styles'\n\ninterface LoadingProps {\n    onClick?: () => void\n}\n\ninterface _LoadingProps extends LoadingProps, WithStyles<typeof componentStyles> { }\n\nconst _Loading: React.FC<_LoadingProps> = (props) => {\n    const { classes, onClick } = props\n    const [percentValue, setPercentValue] = useState<number>(0)\n    const [isPaused, setIsPaused] = useState<boolean>(true)\n\n    const setPercentValueFunc = () => {\n        const newPercentValue = percentValue + 1\n        if (percentValue < 100 && !isPaused) {\n            setTimeout(() => {\n                setPercentValue(newPercentValue)\n            }, 500)\n        }\n    }\n\n    useEffect(() => {\n        setPercentValueFunc()\n    }, [percentValue, isPaused])\n\n    const onStart = () => {\n        setIsPaused(false)\n    }\n\n    const onPause = () => {\n        setIsPaused(true)\n    }\n\n    const onReset = () => {\n        setIsPaused(true)\n        //Resetting percentage to 0 using setTimeOut to handle percentValue set by setPercentValueFunc\n        setTimeout(() => {\n            setPercentValue(0)\n        }, 500)\n    }\n\n    return <><Grid container spacing={3} onClick={onClick} className={classes.loading_main}>\n        <Grid item xs={12} className={classes.title}>\n            PREPFULLY LOADING\n        </Grid>\n        <Grid item xs={12} className={classes.loaderContainer}>\n            <Box className={classes.percent_textContainer}><h1 className={classes.percent_text}>{percentValue}%</h1></Box>\n            <CircularProgress variant=\"determinate\" value={100} className={classes.base_circle} />\n            <CircularProgress variant=\"determinate\" value={percentValue} className={classes.loadingCircle} />\n        </Grid>\n        <Grid item xs={6}>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.startButton}\n                onClick={onStart}>\n                Start\n                </Button>\n        </Grid>\n        <Grid item xs={6}>\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.pauseButton}\n                onClick={onPause}>\n                Pause\n                </Button>\n        </Grid>\n        <Grid item xs={12}>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.resetButton}\n                onClick={onReset}>\n                Reset\n                </Button>\n        </Grid>\n        <Grid item xs={12} className={classes.footer}>\n            <a href=\"https://github.com/akshaybadodiya/loading-component\">GitHub Repository</a>\n        </Grid>\n    </Grid>\n    </>\n}\n\nexport const Loading = withStyles(componentStyles)(_Loading)","import { Theme } from '@material-ui/core/styles/createMuiTheme'\nimport { createStyles } from '@material-ui/core'\n\nexport const componentStyles = (theme: Theme) => createStyles({\n    loading_main: {\n        width: \"100%\",\n        maxWidth: 600,\n        padding: 8,\n        margin: \"24px auto\",\n        [theme.breakpoints.down('xs')]: {\n            margin: \"16px\",\n\n        },\n        border: \"2px solid white\",\n        borderRadius: 12,\n        backgroundColor: \"rgba(255,255,255,0.75)\"\n    },\n    title: {\n        fontFamily: \"'Nunito', sans-serif\",\n        fontSize: 24,\n        [theme.breakpoints.up(\"sm\")]: {\n            fontSize: 36,\n\n        },\n        color: \"#4f4f4f\",\n        textAlign: \"center\"\n    },\n    loadingCircle: {\n        height: \"300px !important\",\n        width: \"300px !important\",\n        borderRadius: 200,\n        margin: \"auto\",\n        color: \"#60c67f\"\n    },\n    base_circle: {\n        height: \"300px !important\",\n        width: \"300px !important\",\n        borderRadius: 200,\n        margin: \"auto\",\n        position: \"absolute\",\n        color: \"#fb7563\"\n    },\n    percent_textContainer: {\n        height: \"300px !important\",\n        width: \"300px !important\",\n        borderRadius: 200,\n        margin: \"auto\",\n        position: \"absolute\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    loaderContainer: {\n        position: \"relative\",\n        padding: 6,\n        display: \"flex\",\n        justifyContent: \"center\"\n    },\n    startButton: {\n        width: \"100%\",\n        \"fontWeight\": 900,\n        fontFamily: \"'Nunito', sans-serif\",\n        fontSize: 20,\n        \"&:hover\": {\n            transform: \"scale(1.02)\",\n            boxShadow: '0px 2px 3.5px 0 rgba(53, 126, 168, 0.56), 0px 7.5px 12.5px 0 rgba(76, 141, 186, 0.6), inset 0px -1px 1px 0 rgba(255, 255, 255, 0.2), inset 0px -4.5px 4.5px 0 rgba(36, 114, 13, 0.28)',\n        },\n        backgroundImage: 'linear-gradient(to top, #63b92a, #afd60f)',\n        borderRadius: 8\n    },\n\n    pauseButton: {\n        width: \"100%\",\n        fontFamily: \"'Nunito', sans-serif\",\n        \"fontWeight\": 900,\n        fontSize: 20,\n        borderRadius: 8,\n        \"&:hover\": {\n            transform: \"scale(1.02)\",\n            boxShadow: \"0px 2px 3.5px 0 rgba(168, 53, 53, 0.56), 0px 7.5px 12.5px 0 rgba(186, 76, 86, 0.6), inset 0px -1px 1px 0 rgba(255, 255, 255, 0.2), inset 0px -4.5px 4.5px 0 rgba(36, 114, 13, 0.28)\",\n        },\n        backgroundImage: \"linear-gradient(to top, rgb(232, 48, 48), rgb(255, 129, 108))\"\n    },\n    resetButton: {\n        width: \"100%\",\n        fontFamily: \"'Nunito', sans-serif\",\n        \"fontWeight\": 900,\n        fontSize: 20,\n        backgroundColor: \"#20a5ff\",\n        \"&:hover\": {\n            backgroundColor: \"#0092f5  !important\",\n\n        },\n        borderRadius: 8,\n    },\n    percent_text: {\n        position: 'absolute',\n        fontFamily: \"'Nunito', sans-serif\",\n        color: \"#4f4f4f\"\n    },\n    footer: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        fontFamily: \"'Nunito', sans-serif\",\n        \"fontWeight\": 900,\n        fontSize: 20,\n        margin: \"auto\"\n    }\n\n})","import React from 'react';\nimport { Loading } from './components/loading/loading';\nimport './app.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* Added animated bg*/}\n      <div className=\"bg\"></div>\n      <div className=\"bg bg2\"></div>\n      <div className=\"bg bg3\"></div>\n      <div className=\"loadingCard\"><Loading /></div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}