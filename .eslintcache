[{"E:\\Genius\\Personal\\prepfully-loading\\src\\index.tsx":"1","E:\\Genius\\Personal\\prepfully-loading\\src\\reportWebVitals.ts":"2","E:\\Genius\\Personal\\prepfully-loading\\src\\App.tsx":"3","E:\\Genius\\Personal\\prepfully-loading\\src\\components\\loading\\loading.tsx":"4","E:\\Genius\\Personal\\prepfully-loading\\src\\components\\loading\\loading.styles.ts":"5"},{"size":478,"mtime":1610744848039,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":387,"mtime":1610827471296,"results":"9","hashOfConfig":"7"},{"size":2724,"mtime":1610825666856,"results":"10","hashOfConfig":"7"},{"size":3253,"mtime":1610829225942,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"11kytl8",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Genius\\Personal\\prepfully-loading\\src\\index.tsx",[],["24","25"],"E:\\Genius\\Personal\\prepfully-loading\\src\\reportWebVitals.ts",[],"E:\\Genius\\Personal\\prepfully-loading\\src\\App.tsx",[],"E:\\Genius\\Personal\\prepfully-loading\\src\\components\\loading\\loading.tsx",["26"],"import React, { useState, useEffect } from 'react'\nimport { withStyles, WithStyles, Grid, Button, Box, CircularProgress } from '@material-ui/core'\nimport { componentStyles } from './loading.styles'\n\ninterface LoadingProps {\n    onClick?: () => void\n}\n\ninterface _LoadingProps extends LoadingProps, WithStyles<typeof componentStyles> { }\n\nconst _Loading: React.FC<_LoadingProps> = (props) => {\n    const { classes, onClick } = props\n    const [percentValue, setPercentValue] = useState<number>(0)\n    const [isPaused, setIsPaused] = useState<boolean>(true)\n\n    const setPercentValueFunc = () => {\n        const newPercentValue = percentValue + 1\n        if (percentValue < 100 && !isPaused) {\n            setTimeout(() => {\n                setPercentValue(newPercentValue)\n            }, 500)\n        }\n    }\n\n    useEffect(() => {\n        setPercentValueFunc()\n    }, [percentValue, isPaused])\n\n    const onStart = () => {\n        setIsPaused(false)\n    }\n\n    const onPause = () => {\n        setIsPaused(true)\n    }\n\n    const onReset = () => {\n        setIsPaused(true)\n        //Resetting percentage to 0 using setTimeOut to handle percentValue set by setPercentValueFunc\n        setTimeout(() => {\n            setPercentValue(0)\n        }, 500)\n    }\n\n    return <Grid container spacing={3} onClick={onClick} className={classes.loading_main}>\n        <Grid item xs={12} className={classes.title}>\n            PREPFULLY LOADING\n        </Grid>\n        <Grid item xs={12} className={classes.loaderContainer}>\n            <Box className={classes.percent_textContainer}><h1 className={classes.percent_text}>{percentValue}%</h1></Box>\n            <CircularProgress variant=\"determinate\" value={100} className={classes.base_circle} />\n            <CircularProgress variant=\"determinate\" value={percentValue} className={classes.loadingCircle} />\n        </Grid>\n        <Grid item xs={6}>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.startButton}\n                onClick={onStart}>\n                Start\n                </Button>\n        </Grid>\n        <Grid item xs={6}>\n            <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.pauseButton}\n                onClick={onPause}>\n                Pause\n                </Button>\n        </Grid>\n        <Grid item xs={12}>\n            <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.resetButton}\n                onClick={onReset}>\n                Reset\n                </Button>\n        </Grid>\n    </Grid>\n}\n\nexport const Loading = withStyles(componentStyles)(_Loading)","E:\\Genius\\Personal\\prepfully-loading\\src\\components\\loading\\loading.styles.ts",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":27,"column":8,"nodeType":"33","endLine":27,"endColumn":32,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPercentValueFunc'. Either include it or remove the dependency array.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [percentValue, isPaused, setPercentValueFunc]",{"range":"40","text":"41"},[869,893],"[percentValue, isPaused, setPercentValueFunc]"]